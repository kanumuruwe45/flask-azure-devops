jobs:
# - job: sast_sca
#   steps:
#   - script: pip install -r requirements.txt
#   - script: pip install bandit safety
#   - script: bandit -f json -o sast-result.json -r app.py || true
#   - script: safety check -r requirements.txt --json > sca-result.json || true
#   - task: CopyFiles@2
#     inputs:
#       sourceFolder: '$(Build.SourcesDirectory)'
#       contents: '*.json'
#       targetFolder: $(Build.ArtifactStagingDirectory)
#   - task: PublishBuildArtifacts@1
#     inputs:
#       pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#       artifactName: sast_sca_results

- job: dast_scan
  pool:
    vmImage: 'ubuntu-16.04'
  steps:  
  - script: docker build -t vulflask .
  - script: docker run -d -p 5050:5050 vulflask
  - script: mkdir -p /zap/
  - script: wget https://github.com/zaproxy/zaproxy/releases/download/v2.8.0/ZAP_2.8.0_Linux.tar.gz
  - script: tar -xzvf ZAP_2.8.0_Linux.tar.gz -C /zap/
  - script: pip2 install robotframework RESTinstance==1.0.0rc5 RoboZap==1.2
  - script: robot Walkthrough.robot
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: '/robozapresults/*.json'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: dast_results
 